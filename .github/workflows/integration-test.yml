on:
  pull_request:
  push:
    branches:
      - main

name: Integration Test

jobs:
  integration:
    name: test against toast.dev
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            target: toast
          - os: macos-latest
            platform: macos
            target: toast
          - os: windows-latest
            platform: windows
            target: toast.exe

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: toast
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
          check-latest: true
      - name: Run cargo build
        working-directory: toast
        run: cargo build
      - name: Install fd
        run: |
          cargo install fd-find
      - name: starters — create-toast
        run: |
          mkdir starters
          cd starters
          npx create-toast default default
          npx create-toast minimal minimal
      - name: starters — Install dependencies
        run: |
          for D in `fd . 'starters/' -t d -d 1`
          do
            echo $D;
            ls;
            cd $D;
            node -e 'const fs = require("fs"); const json = require("./package.json"); json.dependencies.toast = "file:../toast/toast-node-wrapper"; fs.writeFileSync("./package.json", JSON.stringify(json, null, 2));';
            yarn;
            cd -;
          done
        shell: bash
        env:
          TOAST_PREVENT_INSTALL: true
      - name: build starters
        run: |
          for D in `fd . 'starters/' -t d -d 1`
          do
            cd $D;
            TOAST_BINARY="$PWD/../../toast/target/debug/$BINARY_NAME" yarn build;
            cd -;
          done
        shell: bash
        env:
          BINARY_NAME: ${{ matrix.target }}
