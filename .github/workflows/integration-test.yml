on:
  pull_request:
  push:
    branches:
      - main

name: Integration Test

jobs:
  integration:
    name: test against toast.dev
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            target: toast
          - os: macos-latest
            platform: macos
            target: toast
          - os: windows-latest
            platform: windows
            target: toast.exe

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          path: toast
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"
          check-latest: true
      # - name: Run cargo build
      #   working-directory: toast
      #   run: cargo build
      # - name: Install fd
      #   run: |
      #     cargo install fd-find
      - name: starter
        run: |
          npx create-toast default
          cd default
          node -e 'const fs = require("fs"); const json = require("./package.json"); json.dependencies.toast = "file:../toast/toast-node-wrapper"; delete json.scripts.postinstall; fs.writeFileSync("./package.json", JSON.stringify(json, null, 2));'
          npm i
          ls -R node_modules/toast
          ls -R node_modules/preact
          npm run breadbox --dest public/web_modules
          npm run build
        shell: bash
        env:
          TOAST_PREVENT_INSTALL: true
      # - name: replace toast dep with local toast-node-wrapper
      #   working-directory: starters
      #   run: |
      #     for D in `fd . -t d -d 1`
      #     do
      #       cd $D;
      #       echo $D;
      #       node -e 'const fs = require("fs"); const json = require("./package.json"); json.dependencies.toast = "file:../../toast/toast-node-wrapper"; fs.writeFileSync("./package.json", JSON.stringify(json, null, 2));'
      #       cat package.json;
      #       ls -R;
      #       echo "\npreinstall\n"
      #       npm install;
      #       echo "\npost npm i\n"
      #       npm run build;
      #       echo "post-build"
      #       ls -R public;
      #       cd -;
      #     done
      #   shell: bash
      #   env:
      #     TOAST_PREVENT_INSTALL: true
      # - name: deploy
      #   working-directory: www.toast.dev
      #   if: github.event.ref == 'refs/heads/main'
      #   env:
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WWW_SITE_ID }}
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #   run: npx netlify-cli deploy --dir=public --message ${{ github.event.head_commit.url }}
